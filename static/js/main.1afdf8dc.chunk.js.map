{"version":3,"sources":["components/QuizSelection.js","context/UsersProvider.js","components/Top.js","data/quiz.js","context/ScoreProvider.js","components/Quiz.js","components/QuizList.js","components/Score.js","routers/AppRouter.js","reportWebVitals.js","index.js"],"names":["QuizSelection","to","UsersContext","createContext","UsersProvider","children","useState","user","setUser","Provider","value","useUser","useContext","Top","name","setName","email","setEmail","navigate","useNavigate","onSubmit","e","preventDefault","onChange","target","type","content","react","question","answer","js","ScoreContext","INITIAL_STATE","Array","scoreReducer","state","action","map","score","index","payload","ScoreProvider","useReducer","dispatchScore","useScore","Quiz","userAnswer","setUserAns","useEffect","checked","QuizList","quizId","useParams","error","setError","quizes","quiz","key","onClick","includes","undefined","Score","totalScore","setTotalScore","total","reduce","prev","current","AppRouter","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1afdf8dc.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst QuizSelection = () => {\n  return (\n    <div>\n      <Link to=\"/quiz/react\">React</Link>\n      <Link to=\"/quiz/js\">Javascript</Link>\n    </div>\n  );\n};\n\nexport default QuizSelection;\n","import React, { createContext, useContext, useState } from \"react\";\n\nconst UsersContext = createContext();\n\nconst UsersProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  return (\n    <UsersContext.Provider\n      value={{\n        user,\n        setUser,\n      }}\n    >\n      {children}\n    </UsersContext.Provider>\n  );\n};\n\nconst useUser = () => useContext(UsersContext);\n\nexport { useUser, UsersProvider as default };\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useUser } from \"../context/UsersProvider\";\n\nconst Top = () => {\n  const { setUser } = useUser();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const navigate = useNavigate();\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    const user = { name, email };\n    setUser(user);\n    navigate(\"/quiz-selection\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <div>\n          <label>Name: </label>\n          <input\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <label>Email: </label>\n          <input\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            type=\"email\"\n          />\n        </div>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Top;\n","const content = {\n  react: [\n    {\n      question: \"Is React.js a framework?\",\n      answer: \"true\",\n    },\n    {\n      question: \"Functional conponent uses Hooks\",\n      answer: \"true\",\n    },\n    {\n      question: \"All lifecicle method are executed after component mounted\",\n      answer: \"false\",\n    },\n    {\n      question: \"Are props objects?\",\n      answer: \"true\",\n    },\n    {\n      question: \"Does React.js use realDOM?\",\n      answer: \"false\",\n    },\n    {\n      question:\n        \"Do you get any errors if you create the components names start with a lowercase?\",\n      answer: \"true\",\n    },\n    {\n      question: \"Can we use React Hooks in Class components?\",\n      answer: \"false\",\n    },\n    {\n      question:\n        \"Does componentDidMount() get executed after the fisrt rendering?\",\n      answer: \"true\",\n    },\n    {\n      question: \"The fragments let you add extra nodes to the DOM?\",\n      answer: \"false\",\n    },\n    {\n      question:\n        \"Does the React component get re-rendered when you update the state without setState?\",\n      answer: \"false\",\n    },\n  ],\n  js: [],\n};\n\nexport default content;\n","import React, { createContext, useContext, useReducer } from \"react\";\n\nconst ScoreContext = createContext();\nconst INITIAL_STATE = [...Array(10)];\n\nconst scoreReducer = (state, action) => {\n  switch (action.type) {\n    case \"ADD_ANSWER\":\n      return state.map((score, index) => {\n        if (action.payload.index === index) {\n          return action.payload.score;\n        } else {\n          return score;\n        }\n      });\n    default:\n      return state;\n  }\n};\n\nconst ScoreProvider = ({ children }) => {\n  const [score, dispatchScore] = useReducer(scoreReducer, INITIAL_STATE);\n\n  return (\n    <ScoreContext.Provider\n      value={{\n        score,\n        dispatchScore,\n      }}\n    >\n      {children}\n    </ScoreContext.Provider>\n  );\n};\n\nconst useScore = () => useContext(ScoreContext);\n\nexport { useScore, ScoreProvider as default };\n","import React, { useState, useEffect } from \"react\";\nimport { useScore } from \"../context/ScoreProvider\";\n\nconst Quiz = ({ question, answer, index }) => {\n  const [userAnswer, setUserAns] = useState(null);\n  const { dispatchScore } = useScore();\n\n  useEffect(() => {\n    if (userAnswer) {\n      const score = answer === userAnswer ? 10 : 0;\n      dispatchScore({\n        type: \"ADD_ANSWER\",\n        payload: {\n          index,\n          score,\n        },\n      });\n    }\n  }, [userAnswer]);\n\n  return (\n    <div>\n      <div>{question}</div>\n      <label>\n        <input\n          type=\"radio\"\n          value=\"true\"\n          onChange={(e) => setUserAns(e.target.value)}\n          checked={userAnswer === \"true\"}\n        />\n        Yes\n      </label>\n      <label>\n        <input\n          type=\"radio\"\n          value=\"false\"\n          onChange={(e) => setUserAns(e.target.value)}\n          checked={userAnswer === \"false\"}\n        />\n        No\n      </label>\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport quizes from \"../data/quiz\";\nimport Quiz from \"./Quiz\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useScore } from \"../context/ScoreProvider\";\n\nconst ERROR_ANSWER_ALL = \"Answer all questions.\";\n\nconst QuizList = () => {\n  const { quizId } = useParams();\n  const { score } = useScore();\n  const navigate = useNavigate();\n  const [error, setError] = useState(\"\");\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (score.includes(undefined)) {\n      setError(ERROR_ANSWER_ALL);\n      return;\n    } else {\n      navigate(\"/score\");\n    }\n  };\n  return (\n    <div>\n      {quizes[quizId].map((quiz, index) => (\n        <Quiz {...quiz} key={quiz.question} index={index} />\n      ))}\n      <div>{error}</div>\n      <button onClick={onSubmit}>SUBMIT</button>\n    </div>\n  );\n};\n\nexport default QuizList;\n","import React, { useState, useEffect } from \"react\";\nimport { useUser } from \"../context/UsersProvider\";\nimport { useScore } from \"../context/ScoreProvider\";\nconst Score = () => {\n  const { user } = useUser();\n  const { score } = useScore();\n  const [totalScore, setTotalScore] = useState(0);\n\n  useEffect(() => {\n    if (score) {\n      const total = score.reduce((prev, current) => prev + current);\n      setTotalScore(total);\n    }\n  }, [score]);\n  return (\n    <>\n      <div>{user && user.name}</div>\n      <div>Your score is {totalScore}</div>\n    </>\n  );\n};\n\nexport default Score;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport QuizSelection from \"../components/QuizSelection\";\nimport Top from \"../components/Top\";\nimport QuizList from \"../components/QuizList\";\nimport Score from \"../components/Score\";\n\nconst AppRouter = () => {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Top />} />\n        <Route path=\"/quiz-selection\" element={<QuizSelection />} />\n        <Route path=\"/quiz/:quizId\" element={<QuizList />} />\n        <Route path=\"/score\" element={<Score />} />\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default AppRouter;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport AppRouter from \"../src/routers/AppRouter\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport UsersProvider from \"../src/context/UsersProvider\";\nimport ScoreProvider from \"../src/context/ScoreProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <UsersProvider>\n      <ScoreProvider>\n        <AppRouter />\n      </ScoreProvider>\n    </UsersProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}